name: Deploy BlogBackend

on:
  push:
    branches:
      - main  # 你实际用的分支

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'  # 你的Node版本

      - name: Install dependencies
        run: npm install

      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "."
          target: ${{ secrets.TARGET_DIR }}
          strip_components: 0

      - name: Setup environment file
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.TARGET_DIR }}
            
            # 删除旧的.env文件（避免与PM2环境变量冲突）
            rm -f .env
            
            echo "已删除.env文件，将使用PM2环境变量"
            
            echo "环境文件创建完成"

      - name: Install production dependencies
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.TARGET_DIR }}
            echo "开始安装生产依赖..."
            npm install --production
            echo "依赖安装完成"

      - name: Restart PM2 service
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.TARGET_DIR }}
            echo "重启PM2服务..."
            # 设置环境变量
            export DB_HOST=${{ secrets.SERVER_IP }}
            export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            export JWT_SECRET=${{ secrets.JWT_SECRET }}
            export CORS_ORIGIN=${{ secrets.CORS_ORIGIN }}
            
            # 重启PM2服务
            pm2 reload blog-backend || pm2 start ecosystem.config.js --env production --only blog-backend
            echo "PM2服务重启完成"

      - name: Verify deployment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.TARGET_DIR }}
            
            # 等待服务启动
            echo "等待服务启动..."
            sleep 5
            
            # 检查环境变量
            echo "=== 检查环境变量 ==="
            node test-env.js
            
            # 检查服务状态
            echo "=== 检查服务状态 ==="
            pm2 status
            
            # 检查端口监听
            echo "=== 检查端口监听 ==="
            netstat -tlnp | grep :3000 || echo "端口3000未监听"
            
            # 测试健康检查
            echo "=== 测试健康检查 ==="
            curl -s --max-time 5 http://localhost:3000/api/health || echo "本地访问失败"
            
            echo "部署验证完成"